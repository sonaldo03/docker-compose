name: rafal-test

on:
  pull_request:
    branches:
      - '*OPSEXP-*'
      - '*feature*'
      - '*fix*'
      - '*ACS-*'
      - '*ATS-*'
  push:
    branches:
      - '*OPSEXP-*'
      - '*feature*'
      - '*fix*'
      - '*ACS-*'
      - '*ATS-*'

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        #version: [6.2.N, 7.0.N, 7.1.N, community, test]
        version: [6.2.N]
    runs-on: ubuntu-latest
    env:
        HOSTED_ZONE: dev.envalfresco.com
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2.4.25
      - uses: azure/setup-kubectl@v2.0
        id: install
      - name: Setup configs
        run: |
            (umask 066 && aws eks update-kubeconfig --name acs-cluster --region=eu-west-1)
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_REGISTRY_USERNAME }}" --password-stdin "${{ secrets.DOCKER_REGISTRY }}"
      - name: Run Docker compose tests
        id: compose
        run: .github/scripts/docker_compose.sh ${{ github.event.head_commit.message }}
        shell: bash
        env:
          VERSION: ${{ matrix.version}}
      - name: Run helm chart tests
        run: .github/scripts/helm_install.sh ${{ github.event.head_commit.message }}
        shell: bash
        env:
          ACM_CERTIFICATE: ${{ secrets.ACM_CERTIFICATE }}
          AWS_SG: ${{ secrets.AWS_SG }}
          VERSION: ${{ matrix.version }}
  publish:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      HELM_REPO_BASE_URL: https://kubernetes-charts.alfresco.com
      HELM_REPO: incubator
      PROJECT_NAME: alfresco-content-services
      GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: test
      run: .github/scripts/publish_chart.sh ${{ github.event.head_commit.message }}
      shell: bash
      if: github.ref == 'refs/heads/main' || github.event.head_commit.message == '[publish]'
